package config

import (
	"encoding/json"
	"os"
)

type ConfigMap struct {
	configPath string
	LogFile    string `json:"log_file"`

	MachineIP   string `json:"machine_ip"`
	ServicePort string `json:"service_port"`

	RequestURL string `json:"request_uri"`
	HeaderFile string `json:"header_file"`
	PlMain     string `json:"payload_main"`
	PlDirector string `json:"payload_director"`

	OutDir   string `json:"out_dir"`
	DataDir  string `json:"data_dir"`
	DataHtml string `json:"data_html"`
}

func NewConfigMap(path string) (ConfigMap, error) {
	config := ConfigMap{
		configPath: path,
	}
	if err := config.ReadConfig(); err != nil {
		return config, err
	}
	return config, nil
}

func (cm *ConfigMap) ReadConfig() error {
	data, err := os.ReadFile(cm.configPath)
	if err = json.Unmarshal(data, cm); err != nil {
		return err
	}
	return nil
}
