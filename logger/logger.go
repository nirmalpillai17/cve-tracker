package logger

import (
	"fmt"
	"io"
	"log"
	"net/http"
)

type CustomLogger struct {
	InfoLogger *log.Logger
	WarnLogger *log.Logger
	ErrLogger *log.Logger
	*log.Logger
}

func NewLogger(lw io.Writer) CustomLogger {
	clg := CustomLogger{
		InfoLogger: log.New(lw, "[INFO] ", log.Ltime | log.Lshortfile),
		WarnLogger: log.New(lw, "[WARN] ", log.Ltime | log.Lshortfile),
		ErrLogger: log.New(lw, "[ERRO] ", log.Ltime | log.Lshortfile),
		Logger: log.Default(),
	}
	return clg
}

func (cl CustomLogger) Info(s string) {
	cl.InfoLogger.Output(3, s)
}

func (cl CustomLogger) Warn(s string) {
	cl.WarnLogger.Output(3, s)
}

func (cl CustomLogger) Error(err error) {
	cl.ErrLogger.Output(3, fmt.Sprint(err.Error()))
}

func (cl CustomLogger) HttpError(w http.ResponseWriter, err error, sc int) {
	cl.Error(err)
	http.Error(w, err.Error(), sc)
}
