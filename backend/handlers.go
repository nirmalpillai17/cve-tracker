package backend

import (
	"encoding/json"
	"fmt"
	"net/http"
	"os"
	"sync"
)

func usersHandler(w http.ResponseWriter, r *http.Request) {
	basePath, _ := os.Getwd()
	pm, err := os.ReadFile(basePath + "/payload_main.txt")
	if err != nil {
		cl.HttpError(w, err, 500)
		return
	}
	pd, err := os.ReadFile(basePath + "/payload_director.txt")
	if err != nil {
		cl.HttpError(w, err, 500)
		return
	}
	hd, err := os.ReadFile(basePath + "/headers.json")
	if err != nil {
		cl.HttpError(w, err, 500)
		return
	}
	cc := customClient{
		url:             "https://cloudqa-dashboard.arubadev.cloud.hpe.com/api/datasources/proxy/uid/qDaBgRfVk/_msearch?max_concurrent_shard_requests=5",
		payloadMain:     pm,
		payloadDirector: pd,
		httpClient:      http.DefaultClient,
		waitGroup: &sync.WaitGroup{},
	}
	if err := json.Unmarshal(hd, &cc.headers); err != nil {
		cl.HttpError(w, err, 500)
	}
	cc.getFullData()
	fmt.Fprint(w, "data collected successfully\n")
}

func loginHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Fprint(w, "This is loginhandler")
}

func homeHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Fprint(w, "This is homehandler")
}

func dashHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Fprint(w, "This is dashhandler")
}
